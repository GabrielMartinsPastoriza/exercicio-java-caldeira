Index: ../Aula 02/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Aula 02/.idea/vcs.xml b/../Aula 02/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1694824312298)
+++ b/../Aula 02/.idea/vcs.xml	(date 1694824312298)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Aula 02/src/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_12_29_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Aula 02/src/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_12_29_[Changes]/shelved.patch b/../Aula 02/src/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_12_29_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1694824312304)
+++ b/../Aula 02/src/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_12_29_[Changes]/shelved.patch	(date 1694824312304)
@@ -0,0 +1,21 @@
+Index: ../../Aula 01/Lendonumeros.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>import java.util.Scanner;\r\n\r\npublic class numeros {\r\n    public static void main(String[] args) {\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Digite o primeiro número: \");\r\n        double primeiroNumero = scanner.nextDouble();\r\n\r\n        System.out.print(\"Digite o segundo número: \");\r\n        double segundoNumero = scanner.nextDouble();\r\n\r\n        scanner.close();\r\n\r\n        double resultado = somar(primeiroNumero, segundoNumero);\r\n\r\n        //Identifica se o resultado é um número inteiro, afim de evitar resultado.0\r\n        if (resultado == (int) resultado){\r\n            System.out.println(\"O resultado da soma destes números é: \" + (int)resultado);\r\n        } else {\r\n            System.out.println(\"O resultado da soma destes números é: \" + resultado);\r\n        }\r\n\r\n          }\r\n    public static double somar(double primeiroNumero, double segundoNumero){\r\n        return primeiroNumero + segundoNumero;\r\n\r\n      }\r\n    };\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/../../Aula 01/Lendonumeros.java b/../../Aula 01/Lendonumeros.java
+--- a/../../Aula 01/Lendonumeros.java	(revision 6ad018208030d94af24bf3f3a959b528d44ea4a4)
++++ b/../../Aula 01/Lendonumeros.java	(date 1694703578424)
+@@ -22,8 +22,8 @@
+         }
+ 
+           }
+-    public static double somar(double primeiroNumero, double segundoNumero){
+-        return primeiroNumero + segundoNumero;
++        public static double somar(double primeiroNumero, double segundoNumero){
++           return primeiroNumero + segundoNumero;
+ 
+       }
+     };
Index: lendoNumeros.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\r\n\r\npublic class numeros {\r\n    public static void main(String[] args) {\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Digite o primeiro número: \");\r\n        double primeiroNumero = scanner.nextDouble();\r\n\r\n        System.out.print(\"Digite o segundo número: \");\r\n        double segundoNumero = scanner.nextDouble();\r\n\r\n        scanner.close();\r\n\r\n        double resultado = somar(primeiroNumero, segundoNumero);\r\n\r\n        //Identifica se o resultado é um número inteiro, afim de evitar resultado.0\r\n        if (resultado == (int) resultado){\r\n            System.out.println(\"O resultado da soma destes números é: \" + (int)resultado);\r\n        } else {\r\n            System.out.println(\"O resultado da soma destes números é: \" + resultado);\r\n        }\r\n\r\n          }\r\n        public static double somar(double primeiroNumero, double segundoNumero){\r\n           return primeiroNumero + segundoNumero;\r\n\r\n      }\r\n    };\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lendoNumeros.java b/lendoNumeros.java
--- a/lendoNumeros.java	(revision 6ad018208030d94af24bf3f3a959b528d44ea4a4)
+++ b/lendoNumeros.java	(date 1694824312292)
@@ -22,8 +22,8 @@
         }
 
           }
-        public static double somar(double primeiroNumero, double segundoNumero){
-           return primeiroNumero + segundoNumero;
+    public static double somar(double primeiroNumero, double segundoNumero){
+        return primeiroNumero + segundoNumero;
 
       }
     };
Index: ../Aula 02/src/com/github/javacaldeira/SeparaString.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Aula 02/src/com/github/javacaldeira/SeparaString.java b/../Aula 02/src/com/github/javacaldeira/SeparaString.java
new file mode 100644
--- /dev/null	(date 1694824312305)
+++ b/../Aula 02/src/com/github/javacaldeira/SeparaString.java	(date 1694824312305)
@@ -0,0 +1,13 @@
+package com.github.javacaldeira;
+
+import java.util.Scanner;
+
+public class SeparaString {                                                             
+    public static void main(String[] args) {
+        Scanner input = new Scanner(System.in);
+        System.out.println("Digite a palavra que você quer separar: ");
+        String word = input.nextLine();
+
+
+    }
+}
Index: ../Aula 02/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Aula 02/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59_[Changes]/shelved.patch b/../Aula 02/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1694824312296)
+++ b/../Aula 02/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59_[Changes]/shelved.patch	(date 1694824312296)
@@ -0,0 +1,205 @@
+Index: Aula 02.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/Aula 02.iml b/Aula 02.iml
+new file mode 100644
+--- /dev/null	(date 1694701616930)
++++ b/Aula 02.iml	(date 1694701616930)
+@@ -0,0 +1,14 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<module type="JAVA_MODULE" version="4">
++  <component name="NewModuleRootManager" inherit-compiler-output="true">
++    <exclude-output />
++    <content url="file://$MODULE_DIR$">
++      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
++    </content>
++    <orderEntry type="inheritedJdk" />
++    <orderEntry type="sourceFolder" forTests="false" />
++  </component>
++  <component name="SonarLintModuleSettings">
++    <option name="uniqueId" value="cde3d4d1-15c8-497f-b0ee-74c221844546" />
++  </component>
++</module>
+\ No newline at end of file
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+new file mode 100644
+--- /dev/null	(date 1694696856009)
++++ b/.idea/misc.xml	(date 1694696856009)
+@@ -0,0 +1,6 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="20" project-jdk-type="JavaSDK">
++    <output url="file://$PROJECT_DIR$/out" />
++  </component>
++</project>
+\ No newline at end of file
+Index: .idea/modules.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/modules.xml b/.idea/modules.xml
+new file mode 100644
+--- /dev/null	(date 1694696855983)
++++ b/.idea/modules.xml	(date 1694696855983)
+@@ -0,0 +1,8 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="ProjectModuleManager">
++    <modules>
++      <module fileurl="file://$PROJECT_DIR$/Aula 02.iml" filepath="$PROJECT_DIR$/Aula 02.iml" />
++    </modules>
++  </component>
++</project>
+\ No newline at end of file
+Index: .idea/.gitignore
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/.gitignore b/.idea/.gitignore
+new file mode 100644
+--- /dev/null	(date 1694696856312)
++++ b/.idea/.gitignore	(date 1694696856312)
+@@ -0,0 +1,3 @@
++# Default ignored files
++/shelf/
++/workspace.xml
+Index: .idea/vcs.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/vcs.xml b/.idea/vcs.xml
+new file mode 100644
+--- /dev/null	(date 1694696856037)
++++ b/.idea/vcs.xml	(date 1694696856037)
+@@ -0,0 +1,6 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="VcsDirectoryMappings">
++    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
++  </component>
++</project>
+\ No newline at end of file
+Index: ../Aula 01/lendoNumeros.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>import java.util.Scanner;\r\n\r\npublic class numeros {\r\n    public static void main(String[] args) {\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Digite o primeiro número: \");\r\n        double primeiroNumero = scanner.nextDouble();\r\n\r\n        System.out.print(\"Digite o segundo número: \");\r\n        double segundoNumero = scanner.nextDouble();\r\n\r\n        scanner.close();\r\n\r\n        double resultado = somar(primeiroNumero, segundoNumero);\r\n\r\n        //Identifica se o resultado é um número inteiro, afim de evitar resultado.0\r\n        if (resultado == (int) resultado){\r\n            System.out.println(\"O resultado da soma destes números é: \" + (int)resultado);\r\n        } else {\r\n            System.out.println(\"O resultado da soma destes números é: \" + resultado);\r\n        }\r\n\r\n          }\r\n        public static double somar(double primeiroNumero, double segundoNumero){\r\n           return primeiroNumero + segundoNumero;\r\n\r\n      }\r\n    };\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/../Aula 01/lendoNumeros.java b/../Aula 01/lendoNumeros.java
+--- a/../Aula 01/lendoNumeros.java	(revision 635d8dd1a7571d57ebf4e3fec001814894ecb38b)
++++ b/../Aula 01/lendoNumeros.java	(date 1694627180457)
+@@ -22,8 +22,8 @@
+         }
+ 
+           }
+-        public static double somar(double primeiroNumero, double segundoNumero){
+-           return primeiroNumero + segundoNumero;
++    public static double somar(double primeiroNumero, double segundoNumero){
++        return primeiroNumero + segundoNumero;
+ 
+       }
+     };
+Index: src/com/github/javacaldeira/NumerosPrimos.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/com/github/javacaldeira/NumerosPrimos.java b/src/com/github/javacaldeira/NumerosPrimos.java
+new file mode 100644
+--- /dev/null	(date 1694699730552)
++++ b/src/com/github/javacaldeira/NumerosPrimos.java	(date 1694699730552)
+@@ -0,0 +1,43 @@
++package com.github.javacaldeira;
++
++import java.util.Scanner;
++
++public class NumerosPrimos {
++    public static void main(String[] args) {
++        Scanner input = new Scanner(System.in);
++
++        System.out.println("Digite o primeiro número primo: ");
++        int start = input.nextInt();
++
++        System.out.println("Digite o segundo número primo: ");
++        int end = input.nextInt();
++
++        System.out.println("números primos entre o intervalo " + start + " e o interavalo "+ end + ":");
++
++        for (int number = start; number <= end; number++) {
++           if (isPrimeNumber(number)) {
++               System.out.println(number + " ");
++           }
++    }
++         input.close();
++    }
++public static boolean isPrimeNumber(int number) {
++    if (number <= 1) {
++        return false;
++    }
++    if (number <= 3) {
++        return false;
++    }
++    if (number % 2 == 0 || number % 3 == 0) {
++        return false;
++    }
++    for (int i = 5; i * i <= number; i = i + 6) {
++        if (number % i == 0 || number % (i + 2) == 0) {
++            return false;
++        }
++
++    }
++    return true;
++}
++}
++
+Index: .gitignore
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.gitignore b/.gitignore
+new file mode 100644
+--- /dev/null	(date 1694696806268)
++++ b/.gitignore	(date 1694696806268)
+@@ -0,0 +1,29 @@
++### IntelliJ IDEA ###
++out/
++!**/src/main/**/out/
++!**/src/test/**/out/
++
++### Eclipse ###
++.apt_generated
++.classpath
++.factorypath
++.project
++.settings
++.springBeans
++.sts4-cache
++bin/
++!**/src/main/**/bin/
++!**/src/test/**/bin/
++
++### NetBeans ###
++/nbproject/private/
++/nbbuild/
++/dist/
++/nbdist/
++/.nb-gradle/
++
++### VS Code ###
++.vscode/
++
++### Mac OS ###
++.DS_Store
+\ No newline at end of file
Index: ../Aula 02/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Aula 02/.idea/workspace.xml b/../Aula 02/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1694824312299)
+++ b/../Aula 02/.idea/workspace.xml	(date 1694824312299)
@@ -0,0 +1,89 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="913ae194-bac4-4f60-ad45-8469ff3e3e84" name="Changes" comment="Adicionando Aula02">
+      <change beforePath="$PROJECT_DIR$/../Aula 01/Lendonumeros.java" beforeDir="false" afterPath="$PROJECT_DIR$/../Aula 01/Lendonumeros.java" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="selectedUrlAndAccountId">
+      <UrlAndAccount>
+        <option name="accountId" value="59ec8676-e0d7-40a4-a643-794490260522" />
+        <option name="url" value="git@github.com:GabrielMartinsPastoriza/exercicio-java-caldeira.git" />
+      </UrlAndAccount>
+    </option>
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="ProjectErrors" />
+  </component>
+  <component name="ProjectId" id="2VOAZJVOnAHZiZs9JBXfkmp6KI4" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
+    "last_opened_file_path": "C:/Users/Gabriel A/java-caldeira-github/exercicio-java-caldeira/Aula 02/src",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0",
+    "settings.editor.selected.configurable": "preferences.pluginManager"
+  }
+}]]></component>
+  <component name="RunManager">
+    <configuration name="SeparaString" type="Application" factoryName="Application" nameIsGenerated="true">
+      <option name="ALTERNATIVE_JRE_PATH" value="20" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
+      <option name="MAIN_CLASS_NAME" value="com.github.javacaldeira.SeparaString" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.github.javacaldeira.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="913ae194-bac4-4f60-ad45-8469ff3e3e84" name="Changes" comment="" />
+      <created>1694696809364</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1694696809364</updated>
+    </task>
+    <servers />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Adicionando Aula02" />
+    <option name="LAST_COMMIT_MESSAGE" value="Adicionando Aula02" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Aula 02/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Aula 02/.idea/misc.xml b/../Aula 02/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1694824312293)
+++ b/../Aula 02/.idea/misc.xml	(date 1694824312293)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" default="true">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Aula 02/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Aula 02/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59__Changes_.xml b/../Aula 02/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59__Changes_.xml
new file mode 100644
--- /dev/null	(date 1694824312297)
+++ b/../Aula 02/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59__Changes_.xml	(date 1694824312297)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_14_09_2023_11_59_[Changes]" date="1694703578255" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14_09_2023_11_59_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 14/09/2023 11:59 [Changes]" />
+</changelist>
\ No newline at end of file
